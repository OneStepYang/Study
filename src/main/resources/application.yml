server:
  servlet:
    context-path : /Study
    port: 8080
spring:
  main:
    allow-bean-definition-overriding: true
  ##数据库连接信息
  datasource:
    name: dev
    url: jdbc:mysql://182.92.67.19:3306/test?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=true
    username: root
    password: Abcd1234,. 
    type: com.alibaba.druid.pool.DruidDataSource    # 配置当前要使用的数据源的操作类型
    #driver-class-name: com.mysql.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 使用druid数据源
    #连接池的配置信息
    ## 初始化大小，最小，最大
    druid.initialSize: 5
    druid.minIdle: 5
    druid.maxActive: 20
    ## 配置获取连接等待超时的时间
    druid.maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    druid.timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    druid.minEvictableIdleTimeMillis: 300000
    druid.validationQuery: SELECT 1 FROM DUAL
    druid.testWhileIdle: true
    druid.testOnBorrow: false
    druid.testOnReturn: false
    druid.poolPreparedStatements: true
    druid.maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #druid.filters: stat,wall,log4j (springBoot有默认的日志框架logback)
    druid.filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    druid.connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    druid.useGlobalDataSourceStat: true
  redis:
    timeout: 6000ms
    host: 182.92.67.19
    port: 6379
    password: Abcd1234!
    #clientName: null
    database: 0 #选择使用哪个数据库0~15
    lettuce:
      pool:
        max-active: 100  #连接池最大连接数（使用负值表示没有限制）
        max-idle: 50   #连接池中的最大空闲连接
        min-idle: 20       # 连接池中的最小空闲连接
        max-wait: -1    # 连接池最大阻塞等待时间（使用负值表示没有限制）
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    content-type: text/html
    encoding: UTF-8

mybatis:
  type-aliases-package: com.harvey.work.entity
logging:
  config: classpath:logback-spring.xml 